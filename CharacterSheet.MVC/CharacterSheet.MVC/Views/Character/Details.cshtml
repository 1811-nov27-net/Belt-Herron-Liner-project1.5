@model CharacterSheet.MVC.Models.Character

@{
    ViewData["Title"] = "Character Details";
}

<h1>Details: @Model.Name</h1>

<table class="statBlock" cellspacing="0">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <td>
            @Html.DisplayFor(model => model.Name)
        </td>
    </tr>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CharID)
        </th>
        <td>
            @Html.DisplayFor(model => model.CharID)
        </td>
    </tr>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.MaxHitPoints)
        </th>
        <td>

            @Html.DisplayFor(model => model.MaxHitPoints)

        </td>
    </tr>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Race)
        </th>
        <td>
            @Html.DisplayFor(model => model.Race)
        </td>
    </tr>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Sex)
        </th>
        <td>
            @Html.DisplayFor(model => model.Sex)
        </td>
    </tr>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Alignment)
        </th>
        <td>
            @Html.DisplayFor(model => model.Alignment)
        </td>
    </tr>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.BaseAttackBonus)
        </th>
        <td onclick="rollDice(20,@(Model.BaseAttackBonus+Model.AttributeBonuses["Strength"]),1)">
            + @Html.DisplayFor(model => model.BaseAttackBonus)
        </td>
    </tr>
    <tr>
        <th>
            Saving Throws
        </th>
        <td>
            @foreach (var item in Model.EffectiveSavingThrows)
            {
                @: @item.Key +<a onclick="rollDice(20,@item.Value,1)">@item.Value</a>, 
            }
        </td>
    </tr>
    <tr>
        <th>
            Attributes
        </th>
        <td>
            @foreach (var item in Model.Attributes)
            {
                @: @item.Key: @item.Value, 
            }
        </td>
    </tr>
    <tr>
        <th>
            Feats
        </th>
        <td>
            @foreach (var item in Model.FeatList)
            {
                @: @item.Key x @item.Value, 
            }
        </td>
    </tr>
    <tr>
        <th>
            Skills
        </th>
        <td>
            @foreach (var item in Model.SkillList)
            {
                @: @item.Key: @item.Value, 
            }
        </td>
    </tr>
    <tr>
        <th>
            Spells Known
        </th>
        <td>
            @foreach (var item in Model.SpellsKnown)
            {
                @: @item.Name, 
            }
        </td>
    </tr>
</table>

<h3>Hitpoint Tracker</h3>
<a id="currentHP"> </a> / @Model.MaxHitPoints
<p>Damage taken: <input type="number" id="dmg" onchange="updateHitpoints()" /></p>
<input hidden id="maxHP" value="@Model.MaxHitPoints" />

<div>
    <p id="dieresult"></p>
    <button id="rollbutton" onclick="rollDice()">Roll D20</button>
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { id = Model.CharID }) |
    <a asp-action="Index">Back to List</a>
</div>
